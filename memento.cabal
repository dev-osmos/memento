cabal-version:  3.0
name:           memento
version:        0.0.1.0

common c
  default-language:
    GHC2021
  default-extensions:
    ApplicativeDo
    BangPatterns
    BinaryLiterals
    BlockArguments
    ConstraintKinds
    DataKinds
    DeriveAnyClass
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    DerivingStrategies
    DerivingVia
    DuplicateRecordFields
    EmptyCase
    FlexibleContexts
    FlexibleInstances
    GADTs
    GeneralizedNewtypeDeriving
    HexFloatLiterals
    InstanceSigs
    ImportQualifiedPost
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    NoFieldSelectors
    NumericUnderscores
    OverloadedLists
    OverloadedRecordDot
    OverloadedStrings
    ScopedTypeVariables
    StandaloneDeriving
    StrictData
    TupleSections
    TypeApplications
    TypeOperators
    TypeFamilies
    TypeSynonymInstances
    UndecidableInstances
  ghc-options:
    -fplugin=Effectful.Plugin
    -Wall
    -Wcompat
    -Wincomplete-uni-patterns
    -Wincomplete-record-updates
    -Wredundant-constraints
    -Wmissing-deriving-strategies
    -Wno-duplicate-exports
    -O
    -threaded
  mixins:
    , base hiding (Prelude)
    , relude (Relude as Prelude)
    , relude

executable mto
  import:           c
  hs-source-dirs:   src
  main-is:          Main.hs
  other-modules:
    Aws.Types
    Data.Aeson.Local
    Data.Iso
    Data.Text.Show
    Data.TreeJson
    Data.TreePath
    Control.Lens.Local
    Memento.Cli
    Memento.Types.Common
    Memento.Types.Config
    Memento.Types.Dynamic
    Memento.Types.Lock
    Memento.Types.Static
    Orphans
  build-depends:
    , aeson
    , aeson-pretty
    , amazonka
    , amazonka-rds
    , base
    , byteslice
    , casing
    , composition
    , chronos
    , co-log
    , co-log-core
    , containers
    , data-default-class
    , data-default-instances-containers
    , effectful
    , effectful-co-log
    , effectful-core
    , effectful-plugin
    , filepath
    , lens
    , lens-aeson
    , optparse-applicative
    , recursion-schemes
    , relude
    , template-haskell
